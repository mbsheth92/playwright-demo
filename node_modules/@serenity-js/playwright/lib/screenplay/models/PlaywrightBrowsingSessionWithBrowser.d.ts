import type { BrowserCapabilities } from '@serenity-js/web';
import type * as playwright from 'playwright-core';
import type { ExtraBrowserContextOptions } from '../../ExtraBrowserContextOptions';
import { PlaywrightBrowsingSession } from './PlaywrightBrowsingSession';
import type { PlaywrightPage } from './PlaywrightPage';
/**
 *  @group Models
 */
export declare class PlaywrightBrowsingSessionWithBrowser extends PlaywrightBrowsingSession {
    protected readonly browser: playwright.Browser;
    protected readonly browserContextOptions: playwright.BrowserContextOptions;
    constructor(browser: playwright.Browser, browserContextOptions: playwright.BrowserContextOptions, extraBrowserContextOptions: ExtraBrowserContextOptions, selectors: playwright.Selectors);
    protected createBrowserContext(): Promise<playwright.BrowserContext>;
    protected registerCurrentPage(): Promise<PlaywrightPage>;
    closeAllPages(): Promise<void>;
    browserCapabilities(): Promise<BrowserCapabilities>;
}
//# sourceMappingURL=PlaywrightBrowsingSessionWithBrowser.d.ts.map