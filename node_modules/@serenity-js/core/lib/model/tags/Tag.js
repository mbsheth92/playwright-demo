"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tag = void 0;
const tiny_types_1 = require("tiny-types");
/**
 * @access public
 */
class Tag extends tiny_types_1.TinyType {
    name;
    type;
    static humanReadable(tagConstructor, tagName) {
        // based on https://github.com/serenity-bdd/serenity-core/blob/8f7d14c6dad47bb58a1585fef5f9d9a44bb963fd/serenity-model/src/main/java/net/thucydides/core/requirements/AbstractRequirementsTagProvider.java#L36
        const name = String(tagName)
            .trim()
            .match(/[\dA-Z]{2,}(?=[A-Z][a-z]+\d*|\b)|[A-Z]?[a-z-]+\d*|[A-Z]|\d+/g)
            .map(chunk => /^[A-Z]+$/.test(chunk) ? chunk : chunk.toLowerCase())
            .join('_')
            .replaceAll(/[\s_]+/g, ' ');
        return new tagConstructor(name.charAt(0).toUpperCase() + name.slice(1));
    }
    constructor(name, type) {
        super();
        this.name = name;
        this.type = type;
        (0, tiny_types_1.ensure)('Tag name', name, (0, tiny_types_1.isDefined)(), (0, tiny_types_1.property)('length', (0, tiny_types_1.isGreaterThan)(0)));
        (0, tiny_types_1.ensure)('Tag type', type, (0, tiny_types_1.isDefined)(), (0, tiny_types_1.property)('length', (0, tiny_types_1.isGreaterThan)(0)));
    }
    toJSON() {
        return super.toJSON();
    }
}
exports.Tag = Tag;
//# sourceMappingURL=Tag.js.map