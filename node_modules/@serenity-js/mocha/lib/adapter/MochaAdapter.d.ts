import type { TestRunnerAdapter } from '@serenity-js/core/lib/adapter';
import type { ModuleLoader } from '@serenity-js/core/lib/io';
import type { Outcome } from '@serenity-js/core/lib/model';
import type { MochaConfig } from './MochaConfig';
/**
 * Allows for programmatic execution of Mocha test scenarios,
 * using [`SerenityReporterForMocha`](https://serenity-js.org/api/mocha/function/export=/) to report progress.
 *
 * ## Learn more
 * - [`TestRunnerAdapter`](https://serenity-js.org/api/core-adapter/interface/TestRunnerAdapter/)
 *
 * @group Integration
 */
export declare class MochaAdapter implements TestRunnerAdapter {
    private readonly config;
    private readonly loader;
    private mocha;
    private totalScenarios;
    constructor(config: MochaConfig, loader: ModuleLoader);
    /**
     * Scenario success threshold for this test runner.
     */
    successThreshold(): Outcome | {
        Code: number;
    };
    /**
     * Loads test scenarios.
     *
     * @param pathsToScenarios
     */
    load(pathsToScenarios: string[]): Promise<void>;
    /**
     * Returns the number of loaded scenarios
     *
     * @throws [`LogicError`](https://serenity-js.org/api/core/class/LogicError/)
     *  If called before `load`
     */
    scenarioCount(): number;
    /**
     * Runs loaded test scenarios.
     *
     * @throws [`LogicError`](https://serenity-js.org/api/core/class/LogicError/)
     *  If called before `load`
     */
    run(): Promise<void>;
    private requireAny;
}
//# sourceMappingURL=MochaAdapter.d.ts.map